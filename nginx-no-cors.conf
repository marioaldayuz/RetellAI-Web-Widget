# Nginx configuration for RetellAI Widget Backend
# This configuration does NOT add CORS headers - they are handled by the Express server

server {
    listen 80;
    server_name retelldemo.olliebot.ai;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name retelldemo.olliebot.ai;

    # SSL Configuration (update paths as needed)
    ssl_certificate /etc/letsencrypt/live/retelldemo.olliebot.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/retelldemo.olliebot.ai/privkey.pem;
    
    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;
    
    # Security headers (but NO CORS headers!)
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Logging
    access_log /var/log/nginx/retelldemo.access.log;
    error_log /var/log/nginx/retelldemo.error.log;
    
    # Client body size
    client_max_body_size 10M;
    
    # Proxy settings
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    
    # Main location - proxy to backend
    location / {
        # IMPORTANT: Do NOT add any Access-Control headers here!
        # CORS is handled by the Express server
        
        proxy_pass http://localhost:3001;
        
        # For WebSocket support (if needed)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://localhost:3001/health;
    }
    
    # API endpoints
    location /api/ {
        # NO CORS headers here - Express handles them
        proxy_pass http://localhost:3001/api/;
    }
}

# WebSocket upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
} 